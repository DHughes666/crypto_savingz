// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  firebaseId String   @unique
  role      String @default("user")
  firstName String @default("New")
  lastName  String @default("User")
  email     String
  createdAt DateTime @default(now())
  savings   Saving[]
  pushToken  String?  
  streakCount     Int       @default(0)
  lastSavedDate   DateTime? // updated on save
  xp            Int       @default(0)   // ðŸŽ® NEW
  level         Int       @default(1)   // ðŸŽ® NEW
  notifications Notification[] 
  broadcastNotification BroadcastNotification[]
  deviceToken DeviceToken[]
}

model Saving {
  id         String   @id @default(uuid())
  userId     String
  amount     Float     // USD value
  crypto     String
  cryptoQty  Float     // new field (quantity of coin saved)
  timestamp  DateTime  @default(now())

  user User @relation(fields: [userId], references: [id])
}

model Notification {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  title     String
  message   String
  date      DateTime @default(now())
  read      Boolean  @default(false)
}

model BroadcastNotification {
  id        String   @id @default(cuid())
  title     String
  message   String
  sentAt    DateTime @default(now())
  senderId  String
  sender    User     @relation(fields: [senderId], references: [id])
}

model DeviceToken {
  id        String   @id @default(uuid())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
}








